{"version":3,"file":"static/js/172.036c470b.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDelails.styled.js","pages/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const StyledImage = styled.img`\n  height: 400px;\n  width: 300px;\n`;\n\nexport const StyledInfo = styled.div`\n  padding-top: 20px;\n  padding-right: 20px;\n`;\n\nexport const StyledName = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const StyledText = styled.p`\n  line-height: 1.5;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledMovieInfo = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const StyledMoreInfo = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const StyledHeader = styled.h3`\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const StyledList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  padding: 6px 18px;\n  border-radius: 4px;\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\n  text-decoration: none;\n  color: #0d57aa;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledContainer,\n  StyledHeader,\n  StyledImage,\n  StyledInfo,\n  StyledItem,\n  StyledLink,\n  StyledList,\n  StyledMoreInfo,\n  StyledMovieInfo,\n  StyledName,\n  StyledText,\n} from './MovieCard.styled';\nimport { Loading } from 'components/Loading/Loading';\n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n  const releaseDate = new Date(release_date);\n  const location = useLocation();\n  console.log('location', location);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated';\n\n  if (!title) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <StyledContainer>\n        <StyledImage src={posterUrl} alt={`${title} poster`} />\n\n        <StyledInfo>\n          <StyledName>\n            {title ?? 'Unknown'} ({releaseYear})\n          </StyledName>\n          <StyledText>User Score: {userScore}</StyledText>\n          <StyledText>\n            <StyledMovieInfo>Overview:</StyledMovieInfo> {overview}\n          </StyledText>\n\n          {genres && genres.length > 0 && (\n            <StyledText>\n              <StyledMovieInfo>Genres:</StyledMovieInfo>\n              {genres.map(genre => genre.name).join(', ')}\n            </StyledText>\n          )}\n        </StyledInfo>\n      </StyledContainer>\n\n      <StyledMoreInfo>\n        <StyledHeader>Additional information</StyledHeader>\n\n        <StyledList>\n          <StyledItem>\n            <StyledLink to=\"cast\" state={location.state ?? '/'}>\n              Cast\n            </StyledLink>\n          </StyledItem>\n\n          <StyledItem>\n            <StyledLink to=\"reviews\" state={location.state ?? '/'}>\n              Reviews\n            </StyledLink>\n          </StyledItem>\n        </StyledList>\n      </StyledMoreInfo>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  width: 90px;\n  height: 30px;\n  border: none;\n  border-radius: 4px;\n  color: rgb(13, 87, 170);\n  background: #ffffff;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 4px;\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","import { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { fetchMovieById } from '../services/Api';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport { StyledButton, StyledContainer } from './MovieDelails.styled';\nimport { Loading } from 'components/Loading/Loading';\n\nconst MovieDelails = () => {\n  const { movieId } = useParams();\n  // const location = useLocation();\n  const locationDetails = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  console.log('locationDetails', locationDetails);\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <StyledContainer>\n        {isLoading ? (\n          <Loading />\n        ) : error ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <>\n            <Link to={locationDetails.state ?? '/'}>\n              <StyledButton type=\"button\">Back</StyledButton>\n            </Link>\n\n            {selectedMovie && <MovieCard movie={selectedMovie} />}\n\n            <Suspense fallback={<Loading />}>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n      </StyledContainer>\n    </main>\n  );\n};\n\nexport default MovieDelails;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org';\nconst API_KEY = '7162f5765990623e356824720ea277df';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledContainer","styled","StyledImage","StyledInfo","StyledName","StyledText","StyledMovieInfo","StyledMoreInfo","StyledHeader","StyledList","StyledItem","StyledLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","releaseDate","Date","location","useLocation","console","log","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","Loading","StyledButton","movieId","useParams","locationDetails","useState","selectedMovie","setSelectedMovie","isLoading","setIsLoading","error","setError","useEffect","fetchSelectedMovie","fetchMovieById","movieData","message","type","Suspense","fallback","URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}