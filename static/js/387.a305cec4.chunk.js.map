{"version":3,"file":"static/js/387.a305cec4.chunk.js","mappings":"kRAEaA,EAAaC,EAAAA,GAAAA,GAAH,yHAQVC,EAAaD,EAAAA,GAAAA,GAAH,kIAOVE,EAAaF,EAAAA,GAAAA,IAAH,kEAKVG,EAAaH,EAAAA,GAAAA,GAAH,uEAKVI,EAAaJ,EAAAA,GAAAA,EAAH,mN,kBC4CvB,EA3Da,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBN,GAAW,GADK,mBAISO,EAAAA,EAAAA,IAAeJ,GAJxB,gBAINN,EAJM,EAINA,KACRC,EAAQD,GACRG,GAAW,GANG,kDAQdE,EAAS,EAAD,IACRF,GAAW,GATG,0DAAH,qDAafM,GACD,GAAE,CAACH,KAGF,8BACGJ,GACC,SAACS,EAAA,EAAD,IACEP,GACF,2BAAK,UAAQA,EAAMQ,WACjBZ,EAAKa,OAAS,GAChB,SAACpB,EAAD,UACGO,EAAKc,KAAI,SAAAC,GAAK,OACb,UAACpB,EAAD,WACGoB,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,eAGL,gBACEF,IAAG,oDACHC,IAAG,UAAKH,EAAMI,KAAX,eAIP,UAACvB,EAAD,YACE,SAACC,EAAD,UAAakB,EAAMI,QACnB,yBAAG,cAAYJ,EAAMK,kBAfRL,EAAMM,GADV,OAsBjB,SAACvB,EAAD,UAAY,mCAInB,C,+LCnEKwB,EAAM,6BACNC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACkBC,IAFX,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACYC,EADZ,iCAC4CK,EAD5C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMvB,GAAN,yFACLmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACHhB,EADG,oBACgBiB,EADhB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdhB,EAAc,mCAAG,WAAMJ,GAAN,yFACLmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACHhB,EADG,4BACwBiB,EADxB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAiB,mCAAG,WAAMxB,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACHhB,EADG,6BACyBiB,EADzB,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const StyledItem = styled.li`\n  width: calc((100% - 5 * 40px) / 6);\n  height: 400px;\n  word-wrap: break-word;\n  text-align: center;\n`;\n\nexport const StyledInfo = styled.div`\n  margin-top: 20px;\n  max-width: 220px;\n`;\n\nexport const StyledName = styled.h4`\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const StyledText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/Api';\nimport {\n  StyledInfo,\n  StyledItem,\n  StyledList,\n  StyledName,\n  StyledText,\n} from './Cast.styled';\nimport { Loading } from 'components/Loading/Loading';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setLoading(true);\n\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <div>Error: {error.message}</div>\n      ) : cast.length > 0 ? (\n        <StyledList>\n          {cast.map(actor => (\n            <StyledItem key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <img\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n\n              <StyledInfo>\n                <StyledName>{actor.name}</StyledName>\n                <p>Character: {actor.character}</p>\n              </StyledInfo>\n            </StyledItem>\n          ))}\n        </StyledList>\n      ) : (\n        <StyledText>We don't have any information</StyledText>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org';\nconst API_KEY = '7162f5765990623e356824720ea277df';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledList","styled","StyledItem","StyledInfo","StyledName","StyledText","useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","fetchMovieCast","Loading","message","length","map","actor","profile_path","src","alt","name","character","id","URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}