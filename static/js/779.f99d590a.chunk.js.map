{"version":3,"file":"static/js/779.f99d590a.chunk.js","mappings":"kRAEaA,EAAaC,EAAAA,GAAAA,GAAH,yHAQVC,EAAaD,EAAAA,GAAAA,GAAH,iDAIVE,EAAeF,EAAAA,GAAAA,GAAH,yFAMZG,EAAeH,EAAAA,GAAAA,EAAH,6CAIZI,EAAaJ,EAAAA,GAAAA,EAAH,gD,kBCiCvB,EA7CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBN,GAAW,GADQ,mBAISO,EAAAA,EAAAA,IAAkBJ,GAJ3B,gBAITK,EAJS,EAITA,QACRV,EAAWU,GACXR,GAAW,GANM,kDAQjBE,EAAS,EAAD,IACRF,GAAW,GATM,0DAAH,qDAalBM,GACD,GAAE,CAACH,KAGF,8BACGJ,GACC,SAACU,EAAA,EAAD,IACER,GACF,2BAAK,UAAQA,EAAMS,WACjBb,EAAQc,OAAS,GACnB,SAACrB,EAAD,UACGO,EAAQe,KAAI,SAAAC,GAAM,OACjB,UAACrB,EAAD,YACE,UAACC,EAAD,WAAc,WAASoB,EAAOC,WAC9B,SAACpB,EAAD,UAAemB,EAAOE,YAFPF,EAAOG,GADP,OAQrB,SAACrB,EAAD,UAAY,+BAInB,C,+LCrDKsB,EAAM,6BACNC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACkBC,IAFX,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACYC,EADZ,iCAC4CK,EAD5C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMrB,GAAN,yFACLiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACHd,EADG,oBACgBe,EADhB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAc,mCAAG,WAAMtB,GAAN,yFACLiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACHd,EADG,4BACwBe,EADxB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdd,EAAiB,mCAAG,WAAMJ,GAAN,yFACRiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACHd,EADG,6BACyBe,EADzB,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const StyledItem = styled.li`\n  padding-bottom: 10px;\n`;\n\nexport const StyledAuthor = styled.h4`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const StyledReview = styled.p`\n  line-height: 1.5;\n`;\n\nexport const StyledText = styled.p`\n  margin: 30px auto 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/Api';\nimport {\n  StyledAuthor,\n  StyledItem,\n  StyledList,\n  StyledReview,\n  StyledText,\n} from './Reviews.styled';\nimport { Loading } from 'components/Loading/Loading';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <div>Error: {error.message}</div>\n      ) : reviews.length > 0 ? (\n        <StyledList>\n          {reviews.map(review => (\n            <StyledItem key={review.id}>\n              <StyledAuthor>Author: {review.author}</StyledAuthor>\n              <StyledReview>{review.content}</StyledReview>\n            </StyledItem>\n          ))}\n        </StyledList>\n      ) : (\n        <StyledText>We don't have any reviews</StyledText>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org';\nconst API_KEY = '7162f5765990623e356824720ea277df';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledList","styled","StyledItem","StyledAuthor","StyledReview","StyledText","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchReviews","fetchMovieReviews","results","Loading","message","length","map","review","author","content","id","URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}