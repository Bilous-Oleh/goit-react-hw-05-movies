{"version":3,"file":"static/js/891.7c0be4b7.chunk.js","mappings":"+SAGaA,EAAgBC,EAAAA,GAAAA,QAAH,oEAKbC,EAAcD,EAAAA,GAAAA,GAAH,oFAMXE,EAAaF,EAAAA,GAAAA,GAAH,gEAKVG,EAAaH,EAAAA,GAAAA,GAAH,8EAMVI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,wJ,sICcvB,EA7BkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACnB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAa,oBAEb,SAAC,KAAD,UACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAME,IAAjC,SAAwCF,EAAMG,SAD/BH,EAAME,GADR,QAQxB,E,kBCYD,EA/Ba,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBF,GAAS,GACTF,GAAW,GAHK,UAIUK,EAAAA,EAAAA,MAJV,gBAIRC,EAJQ,EAIRA,QACRR,EAAUQ,GALM,kDAOhBJ,GAAS,GAPO,yBAShBF,GAAW,GATK,6EAAH,qDAajBI,GACD,GAAE,KAGD,gCACGL,IAAW,SAACQ,EAAA,EAAD,KACVR,GAAWE,IAAS,uBAAG,sBACvBF,IAAYE,IAAS,SAAC,EAAD,CAAWV,OAAQA,MAG/C,C,+LChCKiB,EAAM,6BACNC,EAAU,mCAEHJ,EAAgB,mCAAG,sGACPK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,yCACkBC,IAFX,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mCACYC,EADZ,iCAC4CI,EAD5C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHO,EADG,oBACgBN,EADhB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHO,EADG,4BACwBN,EADxB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHO,EADG,6BACyBN,EADzB,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding: 0 40px;\n  margin-bottom: 40px;\n`;\n\nexport const StyledTitle = styled.h2`\n  margin: 30px 0;\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nexport const StyledList = styled.ul`\n  list-style: none;\n  color: #0d57aa;\n`;\n\nexport const StyledItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledSection,\n  StyledLink,\n  StyledList,\n  StyledItem,\n  StyledTitle,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <StyledSection>\n      <StyledTitle>Trending today</StyledTitle>\n\n      <StyledList>\n        {movies.map(movie => (\n          <StyledItem key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`}>{movie.title}</StyledLink>\n          </StyledItem>\n        ))}\n      </StyledList>\n    </StyledSection>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport { fetchTrendMovies } from 'services/Api';\nimport { Loading } from 'components/Loading/Loading';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setError(false);\n        setLoading(true);\n        const { results } = await fetchTrendMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {!loading && error && <p>Oops! Try later.</p>}\n      {!loading && !error && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org';\nconst API_KEY = '7162f5765990623e356824720ea277df';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledSection","styled","StyledTitle","StyledList","StyledItem","StyledLink","Link","movies","map","movie","to","id","title","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","fetchTrendMovies","results","Loading","URL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}